import type { Metadata } from "next";
import Script from "next/script";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ThemeController from "@/components/theme/ThemeController";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ja" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Ensure dark mode is applied before hydration using persisted store */}
        <Script id="theme-init" strategy="beforeInteractive">
          {`
          (function(){
            try {
              var raw = localStorage.getItem('editor-storage');
              if (!raw) return;
              var data = JSON.parse(raw);
              var state = data?.state || data; // zustand persist structure
              var theme = state?.editorSettings?.theme;
              if (theme === 'dark') {
                document.documentElement.classList.add('dark');
                document.documentElement.setAttribute('data-theme','dark');
              }
            } catch(e) {
              // noop
            }
          })();
          `}
        </Script>
        {/* Apply dark class on <html> based on persisted setting */}
        <ThemeController />
        {children}
      </body>
    </html>
  );
}
